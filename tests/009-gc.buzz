import "std";
import "gc";

bool collectorCalled = false;

object Kill {
    int yo = -1,

    fun collect() > void {
        collectorCalled = true;
    }
}

test "GC, collecting unreferenced objects" {
    int i = 0;
    _ = Kill{}; | Should be kept longer
    while (i < 100) {
        _ = Kill{ yo = i }; | Should be collected since not referenced anywhere

        i = i + 1;
    }

    const int before = gc.allocated();

    gc.collect();

    std.assert(gc.allocated() <= before, message: "Garbage was collected");
    std.assert(collectorCalled, message: "Object collector was called");
}